# logging.level.org.springframework=OFF
# logging.level.root=OFF
# spring.main.banner-mode=off
spring.boot.autoconfigure.logging.condition-report.enabled=false
logging.level.org.springframework.boot.autoconfigure=WARN

#Server configuration
# Port and Address
server.port=8080
server.address=0.0.0.0

# Netty (WebFlux's default server)
server.netty.connection-timeout=60s
server.netty.max-initial-line-length=8192
server.netty.idle-timeout=60s

# Enable/Disable features
# spring.webflux.base-path=/api
spring.webflux.static-path-pattern=/static/**

#Reactive settings
# Codec Configuration (JSON, Protobuf, etc.)
spring.codec.max-in-memory-size=256KB
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

# Date Format
spring.webflux.format.date=yyyy-MM-dd
spring.webflux.format.time=HH:mm:ss

#thread pool
# Event Loop Threads (Default: 2 * CPU cores)
spring.webflux.reactor.netty.io-worker-count=4

# Bounded Elastic Scheduler (for blocking tasks)
spring.webflux.reactor.scheduler.bounded-size=100
spring.webflux.reactor.scheduler.bounded-queue-size=1000

#ratelimitting
# Resilience4j Rate Limiter
resilience4j.ratelimiter.instances.myLimiter.limit-for-period=100
resilience4j.ratelimiter.instances.myLimiter.limit-refresh-period=1s
resilience4j.ratelimiter.instances.myLimiter.timeout-duration=0

# Micrometer Metrics
management.metrics.web.server.request.autotime.enabled=true
management.endpoints.web.exposure.include=health,metrics
# Enable health endpoint
management.endpoint.health.enabled=true
# Create a 'readiness' group
# management.endpoint.health.group.readiness.include=db,diskSpace

# Create a 'liveness' group
management.endpoint.health.group.liveness.include=ping

# CORS Configuration
spring.webflux.cors.allowed-origins=https://example.com
spring.webflux.cors.allowed-methods=GET,POST
spring.webflux.cors.max-age=3600

# HTTP/2 (if supported)
server.http2.enabled=true

# RSocket Server
spring.rsocket.server.port=7000
spring.rsocket.server.transport=websocket
spring.rsocket.server.mapping-path=/rsocket

# Global Timeouts
spring.webclient.timeout.connect=5s
spring.webclient.timeout.response=10s
spring.webclient.timeout.read=10s

# Connection Pool
spring.webclient.pool.max-connections=100
spring.webclient.pool.max-idle-time=30s

# Timeouts (in milliseconds)
http.client.connect-timeout=10000
http.client.response-timeout=10000
http.client.read-timeout=10000
http.client.write-timeout=10000

# Connection Pool Settings
http.client.pool.max-connections=100
http.client.pool.acquire-timeout=5000